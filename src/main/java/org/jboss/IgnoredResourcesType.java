//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.23 at 01:55:54 PM PDT 
//


package org.jboss;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * 
 *                 Provides names of direct child resources of the domain root resource requests for which the
 *                 Host Controller should ignore. Only relevant on a slave Host Controller. Configuring such
 *                 "ignored resources" may help allow a Host Controller from an earlier release to function as a
 *                 slave to a master Host Controller running a later release, by letting the slave ignore portions
 *                 of the configuration its version of the software cannot understand. This strategy can only be
 *                 successful if the servers managed by the slave Host Controller do not reference any of the
 *                 ignored configuration.
 * 
 *                 Supports the following attributes:
 * 
 *                 type -- the type of resource (e.g. 'profile' or 'socket-binding-group') certain instances of which
 *                         should be ignored. The value corresponds to the 'key' portion of the first element in the
 *                         resource's address (e.g. 'profile' in the address /profile=ha/subsystem=web)
 * 
 *                 wildcard -- if 'true', all resources of the given type should be ignored.
 * 
 *                 Child elements list the names of specific instances of the given type of resource
 *                 that should be ignored. Each element in the list corresponds to the 'value' portion of
 *                 the first element in the resource's address (e.g. 'ha' in the address /profile=ha/subsystem=web.)
 *             
 * 
 * <p>Java class for ignored-resourcesType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ignored-resourcesType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="instance" type="{urn:jboss:domain:1.4}ignored-resource-instanceType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="type" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="wildcard" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="names" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ignored-resourcesType", propOrder = {
    "instance"
})
public class IgnoredResourcesType {

    protected List<IgnoredResourceInstanceType> instance;
    @XmlAttribute(required = true)
    protected String type;
    @XmlAttribute
    protected Boolean wildcard;
    @XmlAttribute
    protected String names;

    /**
     * Gets the value of the instance property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instance property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstance().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link IgnoredResourceInstanceType }
     * 
     * 
     */
    public List<IgnoredResourceInstanceType> getInstance() {
        if (instance == null) {
            instance = new ArrayList<IgnoredResourceInstanceType>();
        }
        return this.instance;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

    /**
     * Gets the value of the wildcard property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isWildcard() {
        if (wildcard == null) {
            return false;
        } else {
            return wildcard;
        }
    }

    /**
     * Sets the value of the wildcard property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setWildcard(Boolean value) {
        this.wildcard = value;
    }

    /**
     * Gets the value of the names property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNames() {
        return names;
    }

    /**
     * Sets the value of the names property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNames(String value) {
        this.names = value;
    }

}
