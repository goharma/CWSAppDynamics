//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.10.23 at 01:55:54 PM PDT 
//


package org.jboss;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.jboss package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _BootstrapURI_QNAME = new QName("urn:jboss:domain:1.4", "bootstrapURI");
    private final static QName _NamedInterfaceTypeNic_QNAME = new QName("urn:jboss:domain:1.4", "nic");
    private final static QName _NamedInterfaceTypePointToPoint_QNAME = new QName("urn:jboss:domain:1.4", "point-to-point");
    private final static QName _NamedInterfaceTypePublicAddress_QNAME = new QName("urn:jboss:domain:1.4", "public-address");
    private final static QName _NamedInterfaceTypeSubnetMatch_QNAME = new QName("urn:jboss:domain:1.4", "subnet-match");
    private final static QName _NamedInterfaceTypeVirtual_QNAME = new QName("urn:jboss:domain:1.4", "virtual");
    private final static QName _NamedInterfaceTypeUp_QNAME = new QName("urn:jboss:domain:1.4", "up");
    private final static QName _NamedInterfaceTypeSiteLocalAddress_QNAME = new QName("urn:jboss:domain:1.4", "site-local-address");
    private final static QName _NamedInterfaceTypeNicMatch_QNAME = new QName("urn:jboss:domain:1.4", "nic-match");
    private final static QName _NamedInterfaceTypeMulticast_QNAME = new QName("urn:jboss:domain:1.4", "multicast");
    private final static QName _NamedInterfaceTypeLoopbackAddress_QNAME = new QName("urn:jboss:domain:1.4", "loopback-address");
    private final static QName _NamedInterfaceTypeAny_QNAME = new QName("urn:jboss:domain:1.4", "any");
    private final static QName _NamedInterfaceTypeLinkLocalAddress_QNAME = new QName("urn:jboss:domain:1.4", "link-local-address");
    private final static QName _NamedInterfaceTypeLoopback_QNAME = new QName("urn:jboss:domain:1.4", "loopback");
    private final static QName _NamedInterfaceTypeNot_QNAME = new QName("urn:jboss:domain:1.4", "not");
    private final static QName _NamedInterfaceTypeInetAddress_QNAME = new QName("urn:jboss:domain:1.4", "inet-address");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.jboss
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link LdapAuthenticationType }
     * 
     */
    public LdapAuthenticationType createLdapAuthenticationType() {
        return new LdapAuthenticationType();
    }

    /**
     * Create an instance of {@link BaseDeploymentType }
     * 
     */
    public BaseDeploymentType createBaseDeploymentType() {
        return new BaseDeploymentType();
    }

    /**
     * Create an instance of {@link ServerJvmType }
     * 
     */
    public ServerJvmType createServerJvmType() {
        return new ServerJvmType();
    }

    /**
     * Create an instance of {@link ServerManagementType }
     * 
     */
    public ServerManagementType createServerManagementType() {
        return new ServerManagementType();
    }

    /**
     * Create an instance of {@link JaasAuthenticationType }
     * 
     */
    public JaasAuthenticationType createJaasAuthenticationType() {
        return new JaasAuthenticationType();
    }

    /**
     * Create an instance of {@link StandaloneSocketBindingGroupType }
     * 
     */
    public StandaloneSocketBindingGroupType createStandaloneSocketBindingGroupType() {
        return new StandaloneSocketBindingGroupType();
    }

    /**
     * Create an instance of {@link ManagementClientContentType }
     * 
     */
    public ManagementClientContentType createManagementClientContentType() {
        return new ManagementClientContentType();
    }

    /**
     * Create an instance of {@link NativeManagementSocketType }
     * 
     */
    public NativeManagementSocketType createNativeManagementSocketType() {
        return new NativeManagementSocketType();
    }

    /**
     * Create an instance of {@link AuthorizationType }
     * 
     */
    public AuthorizationType createAuthorizationType() {
        return new AuthorizationType();
    }

    /**
     * Create an instance of {@link EnvironmentVariablesType }
     * 
     */
    public EnvironmentVariablesType createEnvironmentVariablesType() {
        return new EnvironmentVariablesType();
    }

    /**
     * Create an instance of {@link ServerGroupDeploymentType }
     * 
     */
    public ServerGroupDeploymentType createServerGroupDeploymentType() {
        return new ServerGroupDeploymentType();
    }

    /**
     * Create an instance of {@link NativeManagementSocketBindingRefType }
     * 
     */
    public NativeManagementSocketBindingRefType createNativeManagementSocketBindingRefType() {
        return new NativeManagementSocketBindingRefType();
    }

    /**
     * Create an instance of {@link NamedPathsType }
     * 
     */
    public NamedPathsType createNamedPathsType() {
        return new NamedPathsType();
    }

    /**
     * Create an instance of {@link Properties }
     * 
     */
    public Properties createProperties() {
        return new Properties();
    }

    /**
     * Create an instance of {@link DomainManagementType.OutboundConnections }
     * 
     */
    public DomainManagementType.OutboundConnections createDomainManagementTypeOutboundConnections() {
        return new DomainManagementType.OutboundConnections();
    }

    /**
     * Create an instance of {@link RemoteDestinationType }
     * 
     */
    public RemoteDestinationType createRemoteDestinationType() {
        return new RemoteDestinationType();
    }

    /**
     * Create an instance of {@link LoopbackType }
     * 
     */
    public LoopbackType createLoopbackType() {
        return new LoopbackType();
    }

    /**
     * Create an instance of {@link HeapType }
     * 
     */
    public HeapType createHeapType() {
        return new HeapType();
    }

    /**
     * Create an instance of {@link ExtensionsType }
     * 
     */
    public ExtensionsType createExtensionsType() {
        return new ExtensionsType();
    }

    /**
     * Create an instance of {@link PropertyType }
     * 
     */
    public PropertyType createPropertyType() {
        return new PropertyType();
    }

    /**
     * Create an instance of {@link SocketBindingGroupType }
     * 
     */
    public SocketBindingGroupType createSocketBindingGroupType() {
        return new SocketBindingGroupType();
    }

    /**
     * Create an instance of {@link DomainControllerRemoteType }
     * 
     */
    public DomainControllerRemoteType createDomainControllerRemoteType() {
        return new DomainControllerRemoteType();
    }

    /**
     * Create an instance of {@link DomainDeploymentType }
     * 
     */
    public DomainDeploymentType createDomainDeploymentType() {
        return new DomainDeploymentType();
    }

    /**
     * Create an instance of {@link VaultType }
     * 
     */
    public VaultType createVaultType() {
        return new VaultType();
    }

    /**
     * Create an instance of {@link PlugInAuthType }
     * 
     */
    public PlugInAuthType createPlugInAuthType() {
        return new PlugInAuthType();
    }

    /**
     * Create an instance of {@link StandaloneDeploymentOverlaysType }
     * 
     */
    public StandaloneDeploymentOverlaysType createStandaloneDeploymentOverlaysType() {
        return new StandaloneDeploymentOverlaysType();
    }

    /**
     * Create an instance of {@link KeyStoreType }
     * 
     */
    public KeyStoreType createKeyStoreType() {
        return new KeyStoreType();
    }

    /**
     * Create an instance of {@link HostManagementType }
     * 
     */
    public HostManagementType createHostManagementType() {
        return new HostManagementType();
    }

    /**
     * Create an instance of {@link LocalDestinationType }
     * 
     */
    public LocalDestinationType createLocalDestinationType() {
        return new LocalDestinationType();
    }

    /**
     * Create an instance of {@link SocketBindingClientMappingType }
     * 
     */
    public SocketBindingClientMappingType createSocketBindingClientMappingType() {
        return new SocketBindingClientMappingType();
    }

    /**
     * Create an instance of {@link OutboundSocketBindingType }
     * 
     */
    public OutboundSocketBindingType createOutboundSocketBindingType() {
        return new OutboundSocketBindingType();
    }

    /**
     * Create an instance of {@link AnyIpv6AddressType }
     * 
     */
    public AnyIpv6AddressType createAnyIpv6AddressType() {
        return new AnyIpv6AddressType();
    }

    /**
     * Create an instance of {@link LdapAuthenticationType.UsernameFilter }
     * 
     */
    public LdapAuthenticationType.UsernameFilter createLdapAuthenticationTypeUsernameFilter() {
        return new LdapAuthenticationType.UsernameFilter();
    }

    /**
     * Create an instance of {@link LinkLocalAddressType }
     * 
     */
    public LinkLocalAddressType createLinkLocalAddressType() {
        return new LinkLocalAddressType();
    }

    /**
     * Create an instance of {@link DomainDeploymentsType }
     * 
     */
    public DomainDeploymentsType createDomainDeploymentsType() {
        return new DomainDeploymentsType();
    }

    /**
     * Create an instance of {@link SpecifiedInterfaceType }
     * 
     */
    public SpecifiedInterfaceType createSpecifiedInterfaceType() {
        return new SpecifiedInterfaceType();
    }

    /**
     * Create an instance of {@link MemorySizeType }
     * 
     */
    public MemorySizeType createMemorySizeType() {
        return new MemorySizeType();
    }

    /**
     * Create an instance of {@link ServerGroupType }
     * 
     */
    public ServerGroupType createServerGroupType() {
        return new ServerGroupType();
    }

    /**
     * Create an instance of {@link InetAddressType }
     * 
     */
    public InetAddressType createInetAddressType() {
        return new InetAddressType();
    }

    /**
     * Create an instance of {@link HostManagementInterfacesType }
     * 
     */
    public HostManagementInterfacesType createHostManagementInterfacesType() {
        return new HostManagementInterfacesType();
    }

    /**
     * Create an instance of {@link ServerSocketBindingsType }
     * 
     */
    public ServerSocketBindingsType createServerSocketBindingsType() {
        return new ServerSocketBindingsType();
    }

    /**
     * Create an instance of {@link IgnoredResourcesType }
     * 
     */
    public IgnoredResourcesType createIgnoredResourcesType() {
        return new IgnoredResourcesType();
    }

    /**
     * Create an instance of {@link SocketBindingGroupsType }
     * 
     */
    public SocketBindingGroupsType createSocketBindingGroupsType() {
        return new SocketBindingGroupsType();
    }

    /**
     * Create an instance of {@link PathType }
     * 
     */
    public PathType createPathType() {
        return new PathType();
    }

    /**
     * Create an instance of {@link DomainConfigurationType }
     * 
     */
    public DomainConfigurationType createDomainConfigurationType() {
        return new DomainConfigurationType();
    }

    /**
     * Create an instance of {@link DomainManagementType.SecurityRealms }
     * 
     */
    public DomainManagementType.SecurityRealms createDomainManagementTypeSecurityRealms() {
        return new DomainManagementType.SecurityRealms();
    }

    /**
     * Create an instance of {@link NamedInterfaceType }
     * 
     */
    public NamedInterfaceType createNamedInterfaceType() {
        return new NamedInterfaceType();
    }

    /**
     * Create an instance of {@link SpecifiedPathType }
     * 
     */
    public SpecifiedPathType createSpecifiedPathType() {
        return new SpecifiedPathType();
    }

    /**
     * Create an instance of {@link AuthenticationType }
     * 
     */
    public AuthenticationType createAuthenticationType() {
        return new AuthenticationType();
    }

    /**
     * Create an instance of {@link Server }
     * 
     */
    public Server createServer() {
        return new Server();
    }

    /**
     * Create an instance of {@link JvmsType }
     * 
     */
    public JvmsType createJvmsType() {
        return new JvmsType();
    }

    /**
     * Create an instance of {@link UserType }
     * 
     */
    public UserType createUserType() {
        return new UserType();
    }

    /**
     * Create an instance of {@link JvmOptionType }
     * 
     */
    public JvmOptionType createJvmOptionType() {
        return new JvmOptionType();
    }

    /**
     * Create an instance of {@link Host }
     * 
     */
    public Host createHost() {
        return new Host();
    }

    /**
     * Create an instance of {@link DomainControllerType }
     * 
     */
    public DomainControllerType createDomainControllerType() {
        return new DomainControllerType();
    }

    /**
     * Create an instance of {@link ManagementSocketType }
     * 
     */
    public ManagementSocketType createManagementSocketType() {
        return new ManagementSocketType();
    }

    /**
     * Create an instance of {@link ProfilesType }
     * 
     */
    public ProfilesType createProfilesType() {
        return new ProfilesType();
    }

    /**
     * Create an instance of {@link FsBaseType }
     * 
     */
    public FsBaseType createFsBaseType() {
        return new FsBaseType();
    }

    /**
     * Create an instance of {@link JvmAgentLibType }
     * 
     */
    public JvmAgentLibType createJvmAgentLibType() {
        return new JvmAgentLibType();
    }

    /**
     * Create an instance of {@link PublicAddressType }
     * 
     */
    public PublicAddressType createPublicAddressType() {
        return new PublicAddressType();
    }

    /**
     * Create an instance of {@link DomainDeploymentOverlayType }
     * 
     */
    public DomainDeploymentOverlayType createDomainDeploymentOverlayType() {
        return new DomainDeploymentOverlayType();
    }

    /**
     * Create an instance of {@link ManagementRemotingInterfaceType }
     * 
     */
    public ManagementRemotingInterfaceType createManagementRemotingInterfaceType() {
        return new ManagementRemotingInterfaceType();
    }

    /**
     * Create an instance of {@link ServerGroupsType }
     * 
     */
    public ServerGroupsType createServerGroupsType() {
        return new ServerGroupsType();
    }

    /**
     * Create an instance of {@link ServerManagementInterfacesType }
     * 
     */
    public ServerManagementInterfacesType createServerManagementInterfacesType() {
        return new ServerManagementInterfacesType();
    }

    /**
     * Create an instance of {@link DeploymentOverlayDeploymentType }
     * 
     */
    public DeploymentOverlayDeploymentType createDeploymentOverlayDeploymentType() {
        return new DeploymentOverlayDeploymentType();
    }

    /**
     * Create an instance of {@link ContentType }
     * 
     */
    public ContentType createContentType() {
        return new ContentType();
    }

    /**
     * Create an instance of {@link SpecifiedInterfacesType }
     * 
     */
    public SpecifiedInterfacesType createSpecifiedInterfacesType() {
        return new SpecifiedInterfacesType();
    }

    /**
     * Create an instance of {@link NicMatchType }
     * 
     */
    public NicMatchType createNicMatchType() {
        return new NicMatchType();
    }

    /**
     * Create an instance of {@link ManagementInterfaceType }
     * 
     */
    public ManagementInterfaceType createManagementInterfaceType() {
        return new ManagementInterfaceType();
    }

    /**
     * Create an instance of {@link AnyIpv4AddressType }
     * 
     */
    public AnyIpv4AddressType createAnyIpv4AddressType() {
        return new AnyIpv4AddressType();
    }

    /**
     * Create an instance of {@link NamedPathType }
     * 
     */
    public NamedPathType createNamedPathType() {
        return new NamedPathType();
    }

    /**
     * Create an instance of {@link DomainManagementType }
     * 
     */
    public DomainManagementType createDomainManagementType() {
        return new DomainManagementType();
    }

    /**
     * Create an instance of {@link ServerIdentitiesType }
     * 
     */
    public ServerIdentitiesType createServerIdentitiesType() {
        return new ServerIdentitiesType();
    }

    /**
     * Create an instance of {@link ServerDeploymentsType }
     * 
     */
    public ServerDeploymentsType createServerDeploymentsType() {
        return new ServerDeploymentsType();
    }

    /**
     * Create an instance of {@link ServerDeploymentType }
     * 
     */
    public ServerDeploymentType createServerDeploymentType() {
        return new ServerDeploymentType();
    }

    /**
     * Create an instance of {@link Domain }
     * 
     */
    public Domain createDomain() {
        return new Domain();
    }

    /**
     * Create an instance of {@link BoundedMemorySizeType }
     * 
     */
    public BoundedMemorySizeType createBoundedMemorySizeType() {
        return new BoundedMemorySizeType();
    }

    /**
     * Create an instance of {@link BoottimePropertyType }
     * 
     */
    public BoottimePropertyType createBoottimePropertyType() {
        return new BoottimePropertyType();
    }

    /**
     * Create an instance of {@link SslType }
     * 
     */
    public SslType createSslType() {
        return new SslType();
    }

    /**
     * Create an instance of {@link SubnetMatchType }
     * 
     */
    public SubnetMatchType createSubnetMatchType() {
        return new SubnetMatchType();
    }

    /**
     * Create an instance of {@link ServerNativeManagementInterfaceType }
     * 
     */
    public ServerNativeManagementInterfaceType createServerNativeManagementInterfaceType() {
        return new ServerNativeManagementInterfaceType();
    }

    /**
     * Create an instance of {@link JvmOptionsType }
     * 
     */
    public JvmOptionsType createJvmOptionsType() {
        return new JvmOptionsType();
    }

    /**
     * Create an instance of {@link FsArchiveType }
     * 
     */
    public FsArchiveType createFsArchiveType() {
        return new FsArchiveType();
    }

    /**
     * Create an instance of {@link JvmType }
     * 
     */
    public JvmType createJvmType() {
        return new JvmType();
    }

    /**
     * Create an instance of {@link ExtendedKeyStoreType }
     * 
     */
    public ExtendedKeyStoreType createExtendedKeyStoreType() {
        return new ExtendedKeyStoreType();
    }

    /**
     * Create an instance of {@link LoopbackAddressType }
     * 
     */
    public LoopbackAddressType createLoopbackAddressType() {
        return new LoopbackAddressType();
    }

    /**
     * Create an instance of {@link LdapType }
     * 
     */
    public LdapType createLdapType() {
        return new LdapType();
    }

    /**
     * Create an instance of {@link MulticastType }
     * 
     */
    public MulticastType createMulticastType() {
        return new MulticastType();
    }

    /**
     * Create an instance of {@link PropertiesAuthenticationType }
     * 
     */
    public PropertiesAuthenticationType createPropertiesAuthenticationType() {
        return new PropertiesAuthenticationType();
    }

    /**
     * Create an instance of {@link SocketType }
     * 
     */
    public SocketType createSocketType() {
        return new SocketType();
    }

    /**
     * Create an instance of {@link DomainControllerLocalType }
     * 
     */
    public DomainControllerLocalType createDomainControllerLocalType() {
        return new DomainControllerLocalType();
    }

    /**
     * Create an instance of {@link SocketBindingType }
     * 
     */
    public SocketBindingType createSocketBindingType() {
        return new SocketBindingType();
    }

    /**
     * Create an instance of {@link SiteLocalAddressType }
     * 
     */
    public SiteLocalAddressType createSiteLocalAddressType() {
        return new SiteLocalAddressType();
    }

    /**
     * Create an instance of {@link InterfaceVirtualType }
     * 
     */
    public InterfaceVirtualType createInterfaceVirtualType() {
        return new InterfaceVirtualType();
    }

    /**
     * Create an instance of {@link NamedJvmType }
     * 
     */
    public NamedJvmType createNamedJvmType() {
        return new NamedJvmType();
    }

    /**
     * Create an instance of {@link SpecifiedPathsType }
     * 
     */
    public SpecifiedPathsType createSpecifiedPathsType() {
        return new SpecifiedPathsType();
    }

    /**
     * Create an instance of {@link ClustersType }
     * 
     */
    public ClustersType createClustersType() {
        return new ClustersType();
    }

    /**
     * Create an instance of {@link PlugInsType }
     * 
     */
    public PlugInsType createPlugInsType() {
        return new PlugInsType();
    }

    /**
     * Create an instance of {@link ServersType }
     * 
     */
    public ServersType createServersType() {
        return new ServersType();
    }

    /**
     * Create an instance of {@link StandaloneDeploymentOverlayType }
     * 
     */
    public StandaloneDeploymentOverlayType createStandaloneDeploymentOverlayType() {
        return new StandaloneDeploymentOverlayType();
    }

    /**
     * Create an instance of {@link FsExplodedType }
     * 
     */
    public FsExplodedType createFsExplodedType() {
        return new FsExplodedType();
    }

    /**
     * Create an instance of {@link NicType }
     * 
     */
    public NicType createNicType() {
        return new NicType();
    }

    /**
     * Create an instance of {@link InterfaceUpType }
     * 
     */
    public InterfaceUpType createInterfaceUpType() {
        return new InterfaceUpType();
    }

    /**
     * Create an instance of {@link SocketBindingGroupRefType }
     * 
     */
    public SocketBindingGroupRefType createSocketBindingGroupRefType() {
        return new SocketBindingGroupRefType();
    }

    /**
     * Create an instance of {@link HostNativeManagementInterfaceType }
     * 
     */
    public HostNativeManagementInterfaceType createHostNativeManagementInterfaceType() {
        return new HostNativeManagementInterfaceType();
    }

    /**
     * Create an instance of {@link DomainProfileType }
     * 
     */
    public DomainProfileType createDomainProfileType() {
        return new DomainProfileType();
    }

    /**
     * Create an instance of {@link AddressExclusionType }
     * 
     */
    public AddressExclusionType createAddressExclusionType() {
        return new AddressExclusionType();
    }

    /**
     * Create an instance of {@link PropertiesFileType }
     * 
     */
    public PropertiesFileType createPropertiesFileType() {
        return new PropertiesFileType();
    }

    /**
     * Create an instance of {@link ServerGroupDeploymentsType }
     * 
     */
    public ServerGroupDeploymentsType createServerGroupDeploymentsType() {
        return new ServerGroupDeploymentsType();
    }

    /**
     * Create an instance of {@link StandaloneProfileType }
     * 
     */
    public StandaloneProfileType createStandaloneProfileType() {
        return new StandaloneProfileType();
    }

    /**
     * Create an instance of {@link PropertiesWithBoottime }
     * 
     */
    public PropertiesWithBoottime createPropertiesWithBoottime() {
        return new PropertiesWithBoottime();
    }

    /**
     * Create an instance of {@link NamedInterfacesType }
     * 
     */
    public NamedInterfacesType createNamedInterfacesType() {
        return new NamedInterfacesType();
    }

    /**
     * Create an instance of {@link HttpManagementSocketBindingRefType }
     * 
     */
    public HttpManagementSocketBindingRefType createHttpManagementSocketBindingRefType() {
        return new HttpManagementSocketBindingRefType();
    }

    /**
     * Create an instance of {@link LocalType }
     * 
     */
    public LocalType createLocalType() {
        return new LocalType();
    }

    /**
     * Create an instance of {@link ServerGroupDeploymentOverlayType }
     * 
     */
    public ServerGroupDeploymentOverlayType createServerGroupDeploymentOverlayType() {
        return new ServerGroupDeploymentOverlayType();
    }

    /**
     * Create an instance of {@link IgnoredResourceInstanceType }
     * 
     */
    public IgnoredResourceInstanceType createIgnoredResourceInstanceType() {
        return new IgnoredResourceInstanceType();
    }

    /**
     * Create an instance of {@link UsersAuthenticationType }
     * 
     */
    public UsersAuthenticationType createUsersAuthenticationType() {
        return new UsersAuthenticationType();
    }

    /**
     * Create an instance of {@link LdapAuthenticationType.AdvancedFilter }
     * 
     */
    public LdapAuthenticationType.AdvancedFilter createLdapAuthenticationTypeAdvancedFilter() {
        return new LdapAuthenticationType.AdvancedFilter();
    }

    /**
     * Create an instance of {@link ExtensionType }
     * 
     */
    public ExtensionType createExtensionType() {
        return new ExtensionType();
    }

    /**
     * Create an instance of {@link AnyAddressType }
     * 
     */
    public AnyAddressType createAnyAddressType() {
        return new AnyAddressType();
    }

    /**
     * Create an instance of {@link JvmJavaagentType }
     * 
     */
    public JvmJavaagentType createJvmJavaagentType() {
        return new JvmJavaagentType();
    }

    /**
     * Create an instance of {@link SecurityRealmType }
     * 
     */
    public SecurityRealmType createSecurityRealmType() {
        return new SecurityRealmType();
    }

    /**
     * Create an instance of {@link JvmAgentPathType }
     * 
     */
    public JvmAgentPathType createJvmAgentPathType() {
        return new JvmAgentPathType();
    }

    /**
     * Create an instance of {@link DomainDeploymentOverlaysType }
     * 
     */
    public DomainDeploymentOverlaysType createDomainDeploymentOverlaysType() {
        return new DomainDeploymentOverlaysType();
    }

    /**
     * Create an instance of {@link DeploymentOverlayContentType }
     * 
     */
    public DeploymentOverlayContentType createDeploymentOverlayContentType() {
        return new DeploymentOverlayContentType();
    }

    /**
     * Create an instance of {@link HostHttpManagementInterfaceType }
     * 
     */
    public HostHttpManagementInterfaceType createHostHttpManagementInterfaceType() {
        return new HostHttpManagementInterfaceType();
    }

    /**
     * Create an instance of {@link ServerType }
     * 
     */
    public ServerType createServerType() {
        return new ServerType();
    }

    /**
     * Create an instance of {@link PointToPointType }
     * 
     */
    public PointToPointType createPointToPointType() {
        return new PointToPointType();
    }

    /**
     * Create an instance of {@link HttpManagementSocketType }
     * 
     */
    public HttpManagementSocketType createHttpManagementSocketType() {
        return new HttpManagementSocketType();
    }

    /**
     * Create an instance of {@link ServerHttpManagementInterfaceType }
     * 
     */
    public ServerHttpManagementInterfaceType createServerHttpManagementInterfaceType() {
        return new ServerHttpManagementInterfaceType();
    }

    /**
     * Create an instance of {@link SecretType }
     * 
     */
    public SecretType createSecretType() {
        return new SecretType();
    }

    /**
     * Create an instance of {@link PlugInType }
     * 
     */
    public PlugInType createPlugInType() {
        return new PlugInType();
    }

    /**
     * Create an instance of {@link ServerGroupDeploymentOverlaysType }
     * 
     */
    public ServerGroupDeploymentOverlaysType createServerGroupDeploymentOverlaysType() {
        return new ServerGroupDeploymentOverlaysType();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "bootstrapURI")
    public JAXBElement<String> createBootstrapURI(String value) {
        return new JAXBElement<String>(_BootstrapURI_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "nic", scope = NamedInterfaceType.class)
    public JAXBElement<NicType> createNamedInterfaceTypeNic(NicType value) {
        return new JAXBElement<NicType>(_NamedInterfaceTypeNic_QNAME, NicType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PointToPointType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "point-to-point", scope = NamedInterfaceType.class)
    public JAXBElement<PointToPointType> createNamedInterfaceTypePointToPoint(PointToPointType value) {
        return new JAXBElement<PointToPointType>(_NamedInterfaceTypePointToPoint_QNAME, PointToPointType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PublicAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "public-address", scope = NamedInterfaceType.class)
    public JAXBElement<PublicAddressType> createNamedInterfaceTypePublicAddress(PublicAddressType value) {
        return new JAXBElement<PublicAddressType>(_NamedInterfaceTypePublicAddress_QNAME, PublicAddressType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubnetMatchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "subnet-match", scope = NamedInterfaceType.class)
    public JAXBElement<SubnetMatchType> createNamedInterfaceTypeSubnetMatch(SubnetMatchType value) {
        return new JAXBElement<SubnetMatchType>(_NamedInterfaceTypeSubnetMatch_QNAME, SubnetMatchType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterfaceVirtualType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "virtual", scope = NamedInterfaceType.class)
    public JAXBElement<InterfaceVirtualType> createNamedInterfaceTypeVirtual(InterfaceVirtualType value) {
        return new JAXBElement<InterfaceVirtualType>(_NamedInterfaceTypeVirtual_QNAME, InterfaceVirtualType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterfaceUpType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "up", scope = NamedInterfaceType.class)
    public JAXBElement<InterfaceUpType> createNamedInterfaceTypeUp(InterfaceUpType value) {
        return new JAXBElement<InterfaceUpType>(_NamedInterfaceTypeUp_QNAME, InterfaceUpType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SiteLocalAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "site-local-address", scope = NamedInterfaceType.class)
    public JAXBElement<SiteLocalAddressType> createNamedInterfaceTypeSiteLocalAddress(SiteLocalAddressType value) {
        return new JAXBElement<SiteLocalAddressType>(_NamedInterfaceTypeSiteLocalAddress_QNAME, SiteLocalAddressType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NicMatchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "nic-match", scope = NamedInterfaceType.class)
    public JAXBElement<NicMatchType> createNamedInterfaceTypeNicMatch(NicMatchType value) {
        return new JAXBElement<NicMatchType>(_NamedInterfaceTypeNicMatch_QNAME, NicMatchType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MulticastType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "multicast", scope = NamedInterfaceType.class)
    public JAXBElement<MulticastType> createNamedInterfaceTypeMulticast(MulticastType value) {
        return new JAXBElement<MulticastType>(_NamedInterfaceTypeMulticast_QNAME, MulticastType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoopbackAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "loopback-address", scope = NamedInterfaceType.class)
    public JAXBElement<LoopbackAddressType> createNamedInterfaceTypeLoopbackAddress(LoopbackAddressType value) {
        return new JAXBElement<LoopbackAddressType>(_NamedInterfaceTypeLoopbackAddress_QNAME, LoopbackAddressType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AddressExclusionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "any", scope = NamedInterfaceType.class)
    public JAXBElement<AddressExclusionType> createNamedInterfaceTypeAny(AddressExclusionType value) {
        return new JAXBElement<AddressExclusionType>(_NamedInterfaceTypeAny_QNAME, AddressExclusionType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkLocalAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "link-local-address", scope = NamedInterfaceType.class)
    public JAXBElement<LinkLocalAddressType> createNamedInterfaceTypeLinkLocalAddress(LinkLocalAddressType value) {
        return new JAXBElement<LinkLocalAddressType>(_NamedInterfaceTypeLinkLocalAddress_QNAME, LinkLocalAddressType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoopbackType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "loopback", scope = NamedInterfaceType.class)
    public JAXBElement<LoopbackType> createNamedInterfaceTypeLoopback(LoopbackType value) {
        return new JAXBElement<LoopbackType>(_NamedInterfaceTypeLoopback_QNAME, LoopbackType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AddressExclusionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "not", scope = NamedInterfaceType.class)
    public JAXBElement<AddressExclusionType> createNamedInterfaceTypeNot(AddressExclusionType value) {
        return new JAXBElement<AddressExclusionType>(_NamedInterfaceTypeNot_QNAME, AddressExclusionType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InetAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "inet-address", scope = NamedInterfaceType.class)
    public JAXBElement<InetAddressType> createNamedInterfaceTypeInetAddress(InetAddressType value) {
        return new JAXBElement<InetAddressType>(_NamedInterfaceTypeInetAddress_QNAME, InetAddressType.class, NamedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NicType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "nic", scope = SpecifiedInterfaceType.class)
    public JAXBElement<NicType> createSpecifiedInterfaceTypeNic(NicType value) {
        return new JAXBElement<NicType>(_NamedInterfaceTypeNic_QNAME, NicType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PointToPointType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "point-to-point", scope = SpecifiedInterfaceType.class)
    public JAXBElement<PointToPointType> createSpecifiedInterfaceTypePointToPoint(PointToPointType value) {
        return new JAXBElement<PointToPointType>(_NamedInterfaceTypePointToPoint_QNAME, PointToPointType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link PublicAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "public-address", scope = SpecifiedInterfaceType.class)
    public JAXBElement<PublicAddressType> createSpecifiedInterfaceTypePublicAddress(PublicAddressType value) {
        return new JAXBElement<PublicAddressType>(_NamedInterfaceTypePublicAddress_QNAME, PublicAddressType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SubnetMatchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "subnet-match", scope = SpecifiedInterfaceType.class)
    public JAXBElement<SubnetMatchType> createSpecifiedInterfaceTypeSubnetMatch(SubnetMatchType value) {
        return new JAXBElement<SubnetMatchType>(_NamedInterfaceTypeSubnetMatch_QNAME, SubnetMatchType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterfaceVirtualType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "virtual", scope = SpecifiedInterfaceType.class)
    public JAXBElement<InterfaceVirtualType> createSpecifiedInterfaceTypeVirtual(InterfaceVirtualType value) {
        return new JAXBElement<InterfaceVirtualType>(_NamedInterfaceTypeVirtual_QNAME, InterfaceVirtualType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InterfaceUpType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "up", scope = SpecifiedInterfaceType.class)
    public JAXBElement<InterfaceUpType> createSpecifiedInterfaceTypeUp(InterfaceUpType value) {
        return new JAXBElement<InterfaceUpType>(_NamedInterfaceTypeUp_QNAME, InterfaceUpType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SiteLocalAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "site-local-address", scope = SpecifiedInterfaceType.class)
    public JAXBElement<SiteLocalAddressType> createSpecifiedInterfaceTypeSiteLocalAddress(SiteLocalAddressType value) {
        return new JAXBElement<SiteLocalAddressType>(_NamedInterfaceTypeSiteLocalAddress_QNAME, SiteLocalAddressType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NicMatchType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "nic-match", scope = SpecifiedInterfaceType.class)
    public JAXBElement<NicMatchType> createSpecifiedInterfaceTypeNicMatch(NicMatchType value) {
        return new JAXBElement<NicMatchType>(_NamedInterfaceTypeNicMatch_QNAME, NicMatchType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MulticastType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "multicast", scope = SpecifiedInterfaceType.class)
    public JAXBElement<MulticastType> createSpecifiedInterfaceTypeMulticast(MulticastType value) {
        return new JAXBElement<MulticastType>(_NamedInterfaceTypeMulticast_QNAME, MulticastType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoopbackAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "loopback-address", scope = SpecifiedInterfaceType.class)
    public JAXBElement<LoopbackAddressType> createSpecifiedInterfaceTypeLoopbackAddress(LoopbackAddressType value) {
        return new JAXBElement<LoopbackAddressType>(_NamedInterfaceTypeLoopbackAddress_QNAME, LoopbackAddressType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AddressExclusionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "any", scope = SpecifiedInterfaceType.class)
    public JAXBElement<AddressExclusionType> createSpecifiedInterfaceTypeAny(AddressExclusionType value) {
        return new JAXBElement<AddressExclusionType>(_NamedInterfaceTypeAny_QNAME, AddressExclusionType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LinkLocalAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "link-local-address", scope = SpecifiedInterfaceType.class)
    public JAXBElement<LinkLocalAddressType> createSpecifiedInterfaceTypeLinkLocalAddress(LinkLocalAddressType value) {
        return new JAXBElement<LinkLocalAddressType>(_NamedInterfaceTypeLinkLocalAddress_QNAME, LinkLocalAddressType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LoopbackType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "loopback", scope = SpecifiedInterfaceType.class)
    public JAXBElement<LoopbackType> createSpecifiedInterfaceTypeLoopback(LoopbackType value) {
        return new JAXBElement<LoopbackType>(_NamedInterfaceTypeLoopback_QNAME, LoopbackType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AddressExclusionType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "not", scope = SpecifiedInterfaceType.class)
    public JAXBElement<AddressExclusionType> createSpecifiedInterfaceTypeNot(AddressExclusionType value) {
        return new JAXBElement<AddressExclusionType>(_NamedInterfaceTypeNot_QNAME, AddressExclusionType.class, SpecifiedInterfaceType.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link InetAddressType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn:jboss:domain:1.4", name = "inet-address", scope = SpecifiedInterfaceType.class)
    public JAXBElement<InetAddressType> createSpecifiedInterfaceTypeInetAddress(InetAddressType value) {
        return new JAXBElement<InetAddressType>(_NamedInterfaceTypeInetAddress_QNAME, InetAddressType.class, SpecifiedInterfaceType.class, value);
    }

}
